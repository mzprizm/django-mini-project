# Django Mini Project Worksheet

## Goal

## Project Overview: Twitter Search Clone

_find what you're seeking!_ 

### Project Links

- repo 
- deploy

### Project Description

Twitter search clone enables twitter searching via the API.
The admin can log in to change the overall design of the app / params / etc.
If time, users can log in and save their results / queries to their own files.
If more time, users can send to each other via this app.

### API
Twitter API

### Wireframes
- wireframes
- architecture

### Time/Priority Matrix
- 

### MVP / Post - MVP
#### MVP 
- django python rest api
- Find and use external api 
- Render data on page 
- Allow user to interact with the page

#### PostMVP 

- Add another API or search options, for extra fun / complexity (like funny gifs)
- Add more exciting graphics / motion
- social shares

### Components
| Component | Description | 
| --- | :---: |  
| Index | Renders Bridge| 
| Bridge | routes between About, Jokes(home), Rainbow
| App, JokeSetup & JokePunchline | Renders Jokes This will make the initial data pull and include React Router| 
| Header | This will render the header include the nav | 
| Footer | simple, hidden on rainbow page on mobile display| 
| About | The header stays, the main switches to showing /about | 
| Rainbow, RainbowDivs | Page showing the rainbow colors the joke punchlines rotate through, just for fun design | 
| Button | button component | 
| Flex | flex component |
| Emoji | emoji component |

| Component | Priority | Estimated Time | 
| --- | :---: |  :---: | 
| prep | MVP | 8hrs|
| Working with API | MVP | 3hrs| 
| Building Components | MVP | 7 hrs| 
| Hooks, states etc | MVP | 4 hrs| 
| Styling | MVP | 4hrs | 
| Getting support | MVP | 3hrs| 
| Deployment | MVP | 3hrs| 
| Finishing up Round 1 | MVP | 2hr | 
| QA Round 1 | MVP | 2hr | 
| QA Round 2 | MVP | 1hr | 
| Project worksheet | MVP | 1hr | 
| ReadME + Youtube| MVP | 1hr | 
| Present | MVP | 1hr | 
| Total |MVP | 40 hrs| 

### Additional Libraries
- Emoji
- https://www.npmjs.com/package/react-share

### Code Snippet
I loved how simple components can be and how powerful props are in React.

```
export default function Flex(props) {
  return (
    <div
      style={{
        alignItems: 'center',
        display: 'flex',
        ...props,
      }}
    > 
      {props.children}
    </div>
```

### Issues
Deployment was very tricky for me. Ultimately dragging the build folder into Netlify works great (thank you Suresh!)
I faced many import errors along the way due to reorganizing my components and the architecture. I didn't realize at the start that I'd have a component called Flex for example. 

### Future Update Plans
Improve styling. Add icons on About page and link to youtube explanation video. Write blog post about process. Add animations. Night mode. Make the rainbow colors truly random. Add gifs of people laughing to the About page to get people in the laughing mood :) Add a page on resources about laughter.